//  = = = = = = = = = =  Решение тасков  = = = = = == = =

// Что такое Функции Именованный блок кода ??

// Стрелочные Функции ?? 
// typeOF - возвращает данные 

// ! .. розделение по Пунктам 

// ! Active, false Есть Авторизация 
// ! Массив и есть База данных 

// !?  = = = == = = Alert = = == = =  Что это ??? 



// 15.
// Необходимо реализовать регистрацию и авторизацию пользователя, 
// создать функции, которые будут отвечать за создание и авторизацию пользователей, 
// создание: пользователь должен ввести юзернейм, пароль и подтверждение пароля, 
// необходимо провести проверку есть ли такой пользователь уже в базе данных, если есть, 
// то вывести сообщение, что такой пользователь уже существует и затем остановить работу функции, 
// после проверки юзернейма необходимо проверить пароль и подтверждение, если они не сходятся вывести 
// сообщение о несоответствии и также остановить работу функции, если все проверки пройдены сохранить 
// пользователя в виде объекта {}, по умолчанию все пользователи не авторизованы, авторизация: 
// пользователю необходимо ввести логин и пароль, затем система должна проверить существует ли такой пользователь, 
// если нет, то вывести сообщение об этом, если он существует, проверить сходятся ли пароли, 
// если нет, то вывести сообщение о том, что пароли не совпадают, после всех проверок если все пройдено успешно, 
// вывести сообщение об успешной авторизации(учесть, что если пользователь после авторизации захочет 
/// снова авторизоваться вывести сообщение о том, что он уже авторизован), выход из 
// аккауна: пользователь должен иметь возможность выйти из своего аккаунта, 
// в таком случае снова принимаем логин и пароль, совершаем все проверки и убираем пользователю авторизацию, 
// соответственно при последующей авторизации проблем не должно возникнуть и пользователь снова сможет совершить логин




let dataBase = [
  {
    name: "Miroslav",
    password: "qwerty",
    isActive: false,
  },
  {
    name: "Jakshylyk",
    password: "123456789",
    isActive: false,
  },
];

function register() {
  let name = prompt("Введите имя");
  let password = prompt("Введите пароль");
  let passwordConfirm = prompt("Подтвердите пароль");
  for (let user of dataBase) {
    if (name == user.name && password == user.password) {
      alert("Вы уже зарегистрированы!");
      return; // проверка на наличие пользователя
    }
  }
  if (password !== passwordConfirm) {
    alert("Пароли не совпадают!"); //проверка на совпадение паролей
    return;
  }
  let obj = {
    name,
    password,
    isActive: false, // формирование объекта
  };
  dataBase.push(obj); // добавление пользователя в базу данных
  console.log(dataBase, "add new user");
  alert("Вы успешно зареганы!");
}

function auth() {
  let nameAuth = prompt("Введите имя(auth)");
  let passwordAuth = prompt("Введите пароль(auth)");
  for (let user of dataBase) {
    if (nameAuth !== user.name) {
      //   console.log(nameAuth, user.name);
      alert("Вы не зарегистрированы!");
      //   return; // проверка на наличие пользователя в базе данных
    }
  }
  for (let user of dataBase) {
    if (nameAuth == user.name && passwordAuth !== user.password) {
      alert("Пароли не совпадают!");
      return; // проверка на правильность пароля пользователя
    } else if (
      nameAuth == user.name &&
      passwordAuth == user.password &&
      user.isActive == true
    ) {
      alert("Вы уже авторизованы!");
      return;
    } else if (nameAuth == user.name && passwordAuth == user.password) {
      user.isActive = true;
      alert("Вы успешно авторизованы!");
      console.log(dataBase);
      return;
    }
  }
}

function logout() {
  let name = prompt("NAME LOGOUT");
  let password = prompt("PASSWORD LOGOUT");
  for (let user of dataBase) {
    if (name == user.name && password == user.password) {
      user.isActive = false;
      console.log(dataBase);
      alert("LOGGED OUT");
      return;
    }
  }
}

register();
auth();
logout();